name: Distribute

# Saved as a reference. We are currently using Bitrise to build APKs
on:
  push:
    branches: [distribute-github] # This branch doesn't exist

jobs:
  distribute_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node_modules/
        uses: actions/cache@v1
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install Node Dependencies
        if: steps.node_cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Setup kernel for react native, increase watchers for release versions.
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5

      - name: Install bundler for ruby package management
        run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ./Gemfile.lock | tail -n 1)"
        working-directory: ./android

      - name: Install dotenv
        run: gem install dotenv
        working-directory: ./android
        
      - name: Cache ruby gems
        uses: actions/cache@v1
        id: ruby_cache
        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/android/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
        if: steps.ruby_cache.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./android

      - name: Set up NDK
      # This is not the usual sdkmanager path, but it's what Github Actions uses https://github.com/actions/virtual-environments/issues/60
        run: sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.0.6113669"
        
      # Set up MN
      - name: Setup MN env
        run: ./bin/set_ha.sh mn ${{ secrets.ACCESS_TOKEN }}

      - name: Save signing keys
        run: ./bin/save_keystore.sh ${{ secrets.KEYSTORE_MN }}

      - name: Increment version code
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'release_increment_version_code'
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'
          options: '{ "versionCode" : "$GITHUB_RUN_NUMBER" }'

      - name: Build android release APK
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'release_apk'
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'
          options: '{ "keyStorePassword" : "${{ secrets.KEYSTORE_PASSWORD_MN }}", "keyAlias" : "${{ secrets.KEY_ALIAS }}", "keyPassword" : "${{ secrets.KEY_PASSWORD_MN }}"}'

      - name: Distribute APK
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: 'android_alpha_apk'
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'
          options: '{ "apiToken": "${{ secrets.APPCENTER_TOKEN }}", "appName" : "packcheck-bt-mn" }'

      # - name: Build android release AAB
      #   uses: maierj/fastlane-action@v1.4.0
      #   with:
      #     lane: 'release_aab'
      #     subdirectory: 'android'
      #     bundle-install-path: 'vendor/bundle'
      #     options: '{ "keyStorePassword" : "${{ secrets.KEYSTORE_PASSWORD_MN }}", "keyAlias" : "${{ secrets.KEY_ALIAS }}", "keyPassword" : "${{ secrets.KEY_PASSWORD_MN }}"}'          

      # - name: Distribute AAB
      #   uses: maierj/fastlane-action@v1.4.0
      #   with:
      #     lane: 'android_alpha_aab'
      #     subdirectory: 'android'
      #     bundle-install-path: 'vendor/bundle'
      #     options: '{ "apiToken": "${{ secrets.APPCENTER_TOKEN }}", "appName" : "packcheck-bt-mn" }'